##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# https://www.nginx.com/resources/wiki/start/
# https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/
# https://wiki.debian.org/Nginx/DirectoryStructure
#
# In most cases, administrators will remove this file from sites-enabled/ and
# leave it as reference inside of sites-available where it will continue to be
# updated by the nginx packaging team.
#
# This file will automatically load configuration files provided by other
# applications, such as Drupal or Wordpress. These applications will be made
# available underneath a path with that package name, such as /drupal8.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

# Default server configuration
#
server {
	listen 80 default_server;
	listen [::]:80 default_server;
	server_name _;
	return 404;
}

# Main server block
server {
	listen [::]:443 ssl ipv6only=on;
	listen 443 ssl;
	server_name hireaccel.in;

	root /var/www/html/hireaccel;
	index index.html;

	# SSL Configuration
	ssl_certificate /etc/letsencrypt/live/hireaccel.in/fullchain.pem;
	ssl_certificate_key /etc/letsencrypt/live/hireaccel.in/privkey.pem;
	include /etc/letsencrypt/options-ssl-nginx.conf;
	ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

	# PDF worker specific location - must come before other static files
	location = /pdf.worker.min.js {
		root /var/www/html/hireaccel;
		try_files $uri =404;
		add_header Content-Type application/javascript always;
		add_header X-Content-Type-Options nosniff;
		expires 1y;
		access_log off;
	}

	# Serve static files
	location ~ \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
		root /var/www/html/hireaccel;
		try_files $uri =404;
		expires 1y;
		access_log off;
		add_header Cache-Control "public";
	}

	# API proxy
	location /api/ {
		proxy_pass http://localhost:3002/;
	}

	# Default location for all other requests
	location / {
		root /var/www/html/hireaccel;
		try_files $uri /index.html;
	}
}

# HTTP to HTTPS redirect
server {
	listen 80;
	listen [::]:80;
	server_name hireaccel.in;
	return 301 https://$host$request_uri;
}