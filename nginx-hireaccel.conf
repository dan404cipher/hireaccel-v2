##
# Nginx configuration for hireaccel.in
# Production-ready configuration with SSL, security headers, and proper file serving
##

# Rate limiting configuration
limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
limit_req_zone $binary_remote_addr zone=uploads:10m rate=5r/s;

# HTTPS Server Block
server {
    listen [::]:443 ssl http2;
    listen 443 ssl http2;
    server_name hireaccel.in www.hireaccel.in;

    # Document root for frontend build
    root /var/www/html/hireaccel;
    index index.html;

    # =========================
    # SSL Configuration
    # =========================
    ssl_certificate /etc/letsencrypt/live/hireaccel.in/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/hireaccel.in/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    # Additional SSL settings (protocols and ciphers are handled by letsencrypt options)
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    # =========================
    # Security Headers
    # =========================
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;

    # Content Security Policy
    add_header Content-Security-Policy "
        default-src 'self';
        script-src 'self' 'unsafe-inline' 'unsafe-eval' https://cdn.jsdelivr.net;
        style-src 'self' 'unsafe-inline' https://fonts.googleapis.com https://cdn.jsdelivr.net;
        font-src 'self' https://fonts.gstatic.com https://cdn.jsdelivr.net;
        img-src 'self' data: blob: https://images.unsplash.com https://via.placeholder.com;
        connect-src 'self' https://api.hireaccel.in;
        frame-src 'self' blob:;
        object-src 'none';
        base-uri 'self';
        form-action 'self';
    " always;

    # =========================
    # API Proxy Configuration
    # =========================
    location /api/ {
        # Rate limiting
        limit_req zone=api burst=20 nodelay;

        # Proxy to Node.js backend
        proxy_pass http://localhost:3002/;
        
        # Proxy headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;

        # Timeouts
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;

        # Buffering
        proxy_buffering on;
        proxy_buffer_size 16k;
        proxy_buffers 8 16k;
        proxy_busy_buffers_size 32k;

        # File upload size
        client_max_body_size 50M;
        client_body_buffer_size 128k;

        # Disable caching for API responses
        add_header Cache-Control "no-cache, no-store, must-revalidate" always;
        add_header Pragma "no-cache" always;
        add_header Expires "0" always;
    }

    # =========================
    # Uploads Proxy Configuration (Banners, Files, etc.)
    # =========================
    location /uploads/ {
        # Rate limiting for file access
        limit_req zone=uploads burst=10 nodelay;

        # Proxy to Node.js backend for file serving
        proxy_pass http://localhost:3002/uploads/;
        
        # Proxy headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Timeouts
        proxy_connect_timeout 30s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;

        # Caching for uploaded files
        expires 1y;
        add_header Cache-Control "public, no-transform, immutable";
        add_header X-Content-Type-Options "nosniff";

        # Security for file serving
        add_header X-Frame-Options "DENY";
        
        # Optional: Add CORS headers if needed for cross-origin requests
        # add_header Access-Control-Allow-Origin "https://hireaccel.in";
        # add_header Access-Control-Allow-Methods "GET, HEAD, OPTIONS";
    }

    # =========================
    # API Documentation (if enabled)
    # =========================
    location /api-docs {
        proxy_pass http://localhost:3002/api-docs;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # =========================
    # Frontend Static Assets
    # =========================
    location ~* \.(?:js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, no-transform, immutable";
        add_header Vary "Accept-Encoding";
        
        # Enable compression
        gzip_static on;
        
        # Security headers for assets
        add_header X-Content-Type-Options "nosniff";
        
        # Try to serve file, fallback to 404
        try_files $uri =404;
    }

    # =========================
    # Special handling for service worker and manifest
    # =========================
    location ~* ^/(service-worker|sw)\.js$ {
        expires 0;
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
        try_files $uri =404;
    }

    location ~* ^/manifest\.json$ {
        expires 1d;
        add_header Cache-Control "public";
        try_files $uri =404;
    }

    # =========================
    # Frontend SPA Configuration
    # =========================
    location / {
        # Try to serve file, then directory, then fallback to index.html for SPA routing
        try_files $uri $uri/ /index.html;
        
        # Caching for HTML files
        expires 1h;
        add_header Cache-Control "public, must-revalidate";
        
        # Compression
        gzip on;
        gzip_vary on;
        gzip_min_length 1024;
        gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
    }

    # =========================
    # Health Check Endpoint
    # =========================
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }

    # =========================
    # Security: Block common attack patterns
    # =========================
    location ~* \.(htaccess|htpasswd|ini|log|sh|sql|conf)$ {
        deny all;
        return 404;
    }

    location ~* /\. {
        deny all;
        return 404;
    }

    # Block access to backup files
    location ~* ~$ {
        deny all;
        return 404;
    }

    # =========================
    # Error Pages
    # =========================
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    
    location = /404.html {
        root /var/www/html/hireaccel;
        internal;
    }
    
    location = /50x.html {
        root /var/www/html/hireaccel;
        internal;
    }

    # =========================
    # Logging
    # =========================
    access_log /var/log/nginx/hireaccel.access.log combined;
    error_log /var/log/nginx/hireaccel.error.log warn;
}

# =========================
# WWW Redirect
# =========================
server {
    listen [::]:443 ssl http2;
    listen 443 ssl http2;
    server_name www.hireaccel.in;

    ssl_certificate /etc/letsencrypt/live/hireaccel.in/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/hireaccel.in/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    return 301 https://hireaccel.in$request_uri;
}

# =========================
# HTTP to HTTPS Redirect
# =========================
server {
    listen 80;
    listen [::]:80;
    server_name hireaccel.in www.hireaccel.in;
    
    # Redirect all HTTP traffic to HTTPS
    return 301 https://hireaccel.in$request_uri;
}

# =========================
# Default server block (catch-all)
# =========================
server {
    listen 80 default_server;
    listen [::]:80 default_server;
    listen 443 ssl default_server;
    listen [::]:443 ssl default_server;
    
    ssl_certificate /etc/letsencrypt/live/hireaccel.in/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/hireaccel.in/privkey.pem;
    
    server_name _;
    return 444; # Close connection without response
}
